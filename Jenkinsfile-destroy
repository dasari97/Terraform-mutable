pipeline {
  agent any
  
  parameters {
        string(name: 'ENV', defaultValue: '', description: 'Deployment Environment')
    }
  
  stages {
        stage('cart') {
          steps {
            dir('cart') {
              sh '''
                git clone https://dasarisaikrishna97@dev.azure.com/dasarisaikrishna97/Roboshop/_git/cart .
                cd Terraform-Mutable
                make ${ENV}-destroy
              '''
            }
          }
        }

        stage('catalogue') {
          steps {
            dir('catalogue') {
              sh '''
                git clone https://dasarisaikrishna97@dev.azure.com/dasarisaikrishna97/Roboshop/_git/catalogue  .
                cd Terraform-Mutable
                make ${ENV}-destroy
              '''
            }
          }
        }

        stage('frontend') {
          steps {
            dir('frontend') {
              sh '''
                git clone https://dasarisaikrishna97@dev.azure.com/dasarisaikrishna97/Roboshop/_git/frontend .
                cd Terraform-Mutable
                make ${ENV}-destroy
              '''
            }
          }
        }

        stage('payment') {
          steps {
            dir('payment') {
              sh '''
                git clone https://dasarisaikrishna97@dev.azure.com/dasarisaikrishna97/Roboshop/_git/payment .
                cd Terraform-Mutable
                make ${ENV}-destroy
              '''
            }
          }
        }

        stage('shipping') {
          steps {
            dir('shipping') {
              sh '''
                git clone https://dasarisaikrishna97@dev.azure.com/dasarisaikrishna97/Roboshop/_git/shipping .
                cd Terraform-Mutable
                make ${ENV}-destroy
              '''
            }
          }
        }

        stage('user') {
          steps {
            dir('user') {
              sh '''
                git clone https://dasarisaikrishna97@dev.azure.com/dasarisaikrishna97/Roboshop/_git/user .
                cd Terraform-Mutable
                make ${ENV}-destroy
              '''
            }
          }
        }

    stage('DB') {
      parallel {
        stage('DB') {
          steps {
            sh '''
            cd Databases; make ${ENV}-destroy
            '''
          }
        }
        stage('ALB') {
          steps {
            sh '''
            cd ALB; make ${ENV}-destroy
            '''
          }
        }
      }
    }

    stage('VPC') {
      steps {
        sh '''
        cd VPC 
        terraform init -backend-config=env/${ENV}_backend.tfvars -no-color
        terraform destroy -target=aws_nat_gateway.ngw -var-file=env/${ENV}.tfvars  -auto-approve
        '''
      }
    }

  }

  post {
    always {
      cleanWs()
    }
  }

}